name: 'Build'

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  analysis:
    runs-on: self-hosted
    name: Analysis
    steps:
      - name: Log check outputs
        run: echo "${{ toJSON(needs.check.outputs) }}"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2
          restore-keys: ${{ runner.os }}-m2

      - name: Bump version
        run: mvn versions:set -DnewVersion="$(./determine_version.sh)"

      - name: Build and analyze
        run: mvn -U -s .maven_settings.xml -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=SentioCX_scx-simulator-bot-mock -Pcoverage
        env:
          GITHUB_TOKEN: ${{ secrets.APANA_GITHUB_TOKEN }}  # Needed to get PR information, if any
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          SONAR_TOKEN: ${{ secrets.CAGSENTIO_SONAR_TOKEN }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

  build:
    runs-on: self-hosted
    outputs:
      tag: ${{ steps.image_meta.outputs.tag }}
      git_hash: ${{ steps.image_meta.outputs.git_hash }}
      git_message: ${{ steps.image_meta.outputs.git_message }}
      git_author: ${{ steps.image_meta.outputs.git_author }}
    env:
      IMAGE_NAME: sentiocx/scx-simulator-bot-mock
      REGISTRY: registry.digitalocean.com/sentiocx-imageregistry
    name: Deploy
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2
          restore-keys: ${{ runner.os }}-m2

      - name: Bump version
        id: image_meta
        run: |
          version="$(./determine_version.sh)"
          git_hash="$(git rev-parse HEAD)"
          git_message="$(git log --pretty=format:'%s' -n 1)"
          git_author="$(git log --pretty=format:'%an' -n 1)"
          
          echo "version=${version}"
          
          mvn versions:set -DnewVersion=$version
          echo "tag=$version" >> $GITHUB_OUTPUT
          echo "git_hash=$git_hash" >> $GITHUB_OUTPUT
          echo "git_message=$git_message" >> $GITHUB_OUTPUT
          echo "git_author=$git_author" >> $GITHUB_OUTPUT

      - name: Login to Digital Ocean container registry
        run: doctl registry login --expiry-seconds 1200

      - name: Build and deploy
        run: |
          mvn -s .maven_settings.xml -B deploy
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          docker push $REGISTRY/$IMAGE_NAME:$VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.APANA_GITHUB_TOKEN }}  # Needed to get PR information, if any
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

  push_version:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ansible versions
        uses: actions/checkout@v3
        with:
          repository: SentioCX/scx-deployment-versions.git
          ref: simulator_bot_mock
          token: ${{ secrets.APANA_GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Update version file
        run: |
          echo "${{ needs.build.outputs.tag }}" > version
          echo "${{ needs.build.outputs.git_hash }}" > git_hash
          echo "${{ needs.build.outputs.git_message }}" > git_message
          echo "${{ needs.build.outputs.git_author }}" > git_author
      - name: Commit changes
        run: |
          git config --local user.email "automation@sentiocx.com"
          git config --local user.name "Rick Sanchez"
          git add git_hash git_message git_author
          git commit -a -m "${{ needs.build.outputs.tag }}"
      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          repository: SentioCX/scx-deployment-versions
          github_token: ${{ secrets.APANA_GITHUB_TOKEN }}
          branch: simulator_bot_mock
